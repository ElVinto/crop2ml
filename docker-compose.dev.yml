version: "3.7"

volumes:
  database:  

networks: 
  net:
    ipam:
      driver: default
      config:
        - subnet: 172.27.4.0/16

services:

  db:
    image: mongo
    # restart: unless-stopped
    #env_file: .env
    volumes:
      - ./database:/data/db
      #- ./mongo-init.sh:/docker-entrypoint-initdb.d/mongo-init.sh:ro
      #- ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    ports: 
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=password
      #- MONGO_INITDB_DATABASE=test
    networks:
      net:
        ipv4_address: 172.27.4.1

  # mongo-express:
  #   image: mongo-express
  #   restart: always
  #   ports:
  #     - 8081:8081
  #   environment:
  #     ME_CONFIG_MONGODB_ADMINUSERNAME: root
  #     ME_CONFIG_MONGODB_ADMINPASSWORD: example
  #     ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
  #   networks:
  #     net:
  #       ipv4_address: 172.28.4.2

  # server:
  #   image: node:lts-alpine
  #   volumes:
  #     - ./server:/var/app
  #   ports:
  #     - "5000:5000"
  #   tty: true
  #   depends_on:
  #     - db
  #   #env_file: .env
  #   environment:
  #     - URL_MONGO=mongodb://root:example@db
  #   networks:
  #     net:
  #       ipv4_address: 172.27.4.2

  # client:
  #   image: node:lts-alpine
  #   volumes:
  #     - ./client:/var/app
  #   ports:
  #     - "80:8080"
  #   tty: true
  #   depends_on:
  #     - server
  #   #env_file: .env
  #   environment:
  #     - DEBUG=express:*
  #   networks:
  #     net:
  #       ipv4_address: 172.27.4.3